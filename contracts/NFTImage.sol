// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.9;

import "@openzeppelin/contracts/utils/Base64.sol";
import "@openzeppelin/contracts/utils/Strings.sol";

import "./interfaces/INFTImage.sol";
import "./interfaces/IBookie.sol";

contract NFTImage is INFTImage {
  IBookie bookie;

  uint constant DECIMALS = 6;

  constructor(address _bookie) {
    bookie = IBookie(_bookie);
  }

  function getTokenURI(uint256 tokenId) external view returns (string memory) {
    bytes memory dataURI = abi.encodePacked(
        '{',
            '"name": "Wager NFT #', Strings.toString(tokenId), '",',
            '"description": "NFT for bookie wagers",',
            '"image": "', generateImage(tokenId), '"',
        '}'
    );
    return string(
        abi.encodePacked(
            "data:application/json;base64,",
            Base64.encode(dataURI)
        )
    );
  }

  function generateImage(uint256 tokenId) public view returns(string memory) {
    IBetNFT.WagerData memory data = IBetNFT(bookie).getWagerData(tokenId);
    IBookie.Game memory game = bookie.games(data.gameId);
    bool isHomeOrUnder = data.homeOrUnderPayout > 0;
    bool isOverUnder = game.wagerType == IBetNFT.WagerType.overUnder;

    string memory betString;
    if (isOverUnder) {
      betString = '</text><text x="120" y="320" class="r">Bet Type: ';
    } else {
      betString = '</text><text x="120" y="320" class="r">Home Team: ';
    }

    bytes memory svg = abi.encodePacked(
      '<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 600 650"><path fill="#CCC" d="M54 38h334v592H54V38Z"/><path fill="#F6C019" d="M57 628c-10-1-2-16 0-22 9-3-5-12-4-23 2-18 1-37 4-54 7-35 11-74 18-109 4-25 4-52-1-77-3-17-13-32-19-48-8-27-8-56-1-83 10-38 23-77 15-116-2-14-18-44-10-55l1-1 2 3 3 7 2 4 2 3 11 26a201 201 0 0 1 1 92c-4 17-10 33-13 50-2 18-2 37 2 55 6 17 15 31 20 48 5 23 7 48 5 72-2 30-11 58-16 87-3 17-9 33-10 50l-1 12-1 8v15l-1 13c-2 11 5 43-10 43Z"/><style>.r2 {font: bold 10px Georgia; fill: black } .r {font: bold 16px sans-serif;fill: black;}</style><path fill="#F6C019" d="M57 486c3-42 1-46 0-86 6-12-3-68 0-83 4-11 8-7 8 4 14-3 11 18 13 27 12 7 0 77-2 92-4 12 0 54-18 51-2 3 5-5-1-5Zm-5-238c-7-6 1-39 1-50-10-2-2-35-2-43-2-21 0-42-1-63l2-19V57c0-7 2-12 5-14h1l1 1 2 5a150 150 0 0 0 4 7l2 4 1 1 4 65c0 10 1 21-2 31 0 12 0 24-2 36l-2 37c0 6 1 12-3 17l-6 3c-2 0-3 0-5-2Z"/><path fill="#F6C019" d="M69 629h-9l3-6c-3-22-3-44-5-66 1-29 0-62 2-90 4-6 17 6 14 11a530 530 0 0 0-7 79v35l2 15 2 12 1 10h-3Z"/><path fill="#F6C019" d="M59 626c0-4-2-8 1-12 3-3 7 0 8 4l1 8 1 3H59v-3Zm11-297-4-14v8l1 5c0 1-1 2-2 1-2 0-3-1-3-3l-1-5-1-5-2-8c0-2-2-6 1-6v-4c0-2 2-1 3 0l2 10 2 1c2 1 3 13 4 16l1 5-1-1ZM60 594v-1c-4 1-4-5-4-7l1-9v-2l1-5c1-1 4 1 4 3l1 2 1 5v10l1 3h-5v1Z"/><path fill="#F6C019" d="m62 590-2-2v2l-2-4 1-6 1-2c3 0 3 3 3 5 1 2 2 8-1 7Z"/><path fill="#000" d="M332 409a133 133 0 0 1-9-13v-3h1l2 2 5 14Z"/><path fill="#000" d="M322 412c2-4 5-18 10-19-3 7-5 14-10 19Zm16 22c-3-1-3-5-2-7l1-2 1 1-1 1 1 4h-1 3l1-3-1-2c2 1 3 3 2 5l-4 3Zm3-19v-4a160 160 0 0 1 19-62l13-18 6-4-5 7c-4 6-9 11-12 17a182 182 0 0 0-21 64Z"/><path fill="#000" d="M368 332c1-1 10-9 11-5l-1 1-10 4Z"/><path fill="#000" d="M376 339c0-1 0-15 3-13v2l-3 11Zm6 26-6-9-1-2c2-2 6 9 7 11Z"/><path fill="#000" d="m376 364 3-8 3-2v1l-6 9Zm-12 95c-2 0-2-2-2-4s1-4 3-3v1h-1v4c2 1 3-1 3-3 2 2 0 6-3 5ZM89 488c-3 0-4-4-3-7v-1c1-1 2 0 2 1v4c2 2 4-1 3-3l-1-2 1 1 2 1-1 3v-2l-1 3-2 2Zm3-3Zm11 0 2-4c1 3 0 6-3 7l1-3Zm-3-5 2-2 1 1v2l-1-1-1 1-1-1Zm12 8c-2-2-2-6 0-8l3-1v3l-1-1h-1v5c2 1 4-3 4-5 2 3-1 9-5 7Zm14 2c-2-1-4-4-3-7 0-1 1-4 2-3v5c0 2 2 4 3 1 2-1 2-3 1-4 4 2 1 9-3 8Zm-35-20-6-4v-2h2l4 6Z"/><path fill="#000" d="M87 472c1-2 2-11 5-11-1 4-2 8-5 11Zm15-2c-2-2-6-5-6-8h2l4 8Z"/><path fill="#000" d="M98 471c1-4 2-7 6-9l-6 9Zm16-2c-2-1-7-4-7-7h1l2 2 4 5Z"/><path fill="#000" d="M110 470c2-3 3-7 7-8l-7 8Zm18 0-7-6-1-2 1-1 7 9Z"/><path fill="#000" d="m123 469 2-4 3-3-1 2-4 5Zm15 1-5-8c1-3 5 7 5 8Zm-4-1 5-6-5 6Zm4 20c-2-2-2-9 2-9l-1 5c0 4 4 0 4-2l-2-5c2 2 4 4 3 7 0 3-3 6-6 4ZM296 66c-2-1-8-9-7-11 1-1 2 0 2 1l5 10Z"/><path fill="#000" d="m290 64 3-5 3-4c1 4-3 7-6 9Zm14-1v-3c7-4 8-12 10-19l1-3v8c-1 5-3 10-7 14-1 1-2 3-4 3Zm-45 16c-3 0-4-5-3-7l2-1v2h-1l2 3c2 0 3-1 3-3 3 2 0 6-3 6Zm-18 1c-6-1-11-6-13-11s-3-11-2-16l2-12v9c0 11 0 21 10 26 3 2 7 2 10 1h6l-4 2-9 1ZM126 512c-3 0-4-8-1-9 2-1 2 2 1 2-1 1 0 4 1 4 2 0 2-2 2-4l-1-2 1 1c4 2 2 9-3 8Zm-19-2-13-2 1-3v-1a52 52 0 0 0 23 2h1c3 3-8 4-12 4Zm-28-11-1-1 5 1-1 2-3-2Z"/><path fill="#000" d="m80 504-1-5c-1-1-1-3 1-3h5l-1 2h-3l1 2v2l-2 4v-2ZM226 45l2-2 1 1-1 1h-2Z"/><path fill="#000" d="M229 45h-1v-1l11-1 10 1h-4c-5 0-10 2-16 1ZM87 294c-1-1 1-2 1-3l3-10c4-18 2-38-7-55l-4-9c3 1 5 3 6 6a83 83 0 0 1 4 68c-1 0-2 4-3 3Zm-8-65c0-1-1-14 1-12l-1 12Z"/><path fill="#000" d="m83 220-3-2c-2 1-2-2-1-2l2 1 3 2 2 1h-3Z"/><path fill="#000" d="M85 220c-1-1-5-1-4-3h1l9 4-6-1ZM248 45l-2-4c1 1 4 3 3 5l-1-1Z"/><path fill="#000" d="m246 47 3-3v1l-3 2Z"/><g opacity=".8"><path fill="#1837F6" d="m49 240-1-16v12l-1 1v-1l-1-6v-18c0-25-2-50-3-74a905 905 0 0 1 2-77l1 3 1 10 2 20-1 27 1 22v23l-1 38a1476 1476 0 0 1 1 36ZM44 78a917 917 0 0 0 1-7l-1 7Zm4 4Zm0 20-3-39v29-5l1-1a181 181 0 0 1 0-7l1 23h1Z"/><path fill="#1837F6" d="M40 627c-3-4-3-11-3-15l1-6c0-2 0-4 2-4l1-5 1-9-3-43v-15l2-2-4-24-1-9c0-2 1-5 3-5l-1-19c0-2 0-4 2-5-2-16-2-33-2-49l1-26c0-3 0-6 2-8l-1-37v-15c0-1-1-3 1-4v-8c-2-1-2-3-2-5v-35l1-45v-12l1-14 1-16-2-5v-15l1-15-1-6v-6l1-26-2-8v-4l-1-3h1v-8l-1-9V60l-1-1 1-2v-5l1-2h12l4 1c2 2 2 6 2 10l-1 12 1 11-1 19v42c2-1-2 0-1 1l-1 5c-2 1 2 4 2 6s-3 3-2 4c0 7-2 16 1 22 0 5 3 8 2 13l-1 11 2 2-1 6v17c-2 10-2 21-2 31l-1 28c3 1 2 5 2 7v21l1 2v4l1 31a1099 1099 0 0 1-3 45c-3 22-2 44-2 66 2 1 3 3 3 5l1 11 1 18v78c0 2 1 6-3 7l1 4-3 3c3 2 3 5 4 8l3 5-1 2v20h-4l-11-1a7 7 0 0 0-4 1l-1 1 1-2Z"/><path fill="#F6E118" d="M162 136c-6-1-10-4-12-9-5-1-3-11-2-15s2-8 5-11c4-3 10-3 13-1 7 3 10 13 10 19-1 5-2 10-6 14l-4 2-4 1Zm38 1c-4 0-7-4-8-8s0-9 1-13c3-6 6-12 12-14 1-2 3-3 6-2 3 0 5 2 6 5 4 3 5 8 4 12 0 7-4 12-9 16l-4 2c-3 2-5 3-8 2Z"/><path fill="#F6E118" d="M200 129c-10-2-10-13-6-20 5-11 18-12 20 1v2c-1 7-6 17-14 17Zm0-12 3-4c1-2 2-3 4-3-2-8-7 3-7 7Z"/><path fill="#F6BF18" d="M168 135c-2 0-4-1-4-3l2-4 2-8-1-9-1-3c-2-3-4-6-4-9 0-4 4-5 6-3l4 4c1 1 2 2 1 4 2 1 2 3 2 4a160 160 0 0 1 0 17v1l-1 1-2 4c-1 2-2 4-5 4Zm36 0c-1-1-2-3-1-4 1-3 4-3 6-4l2-12 1-7 1-5v-3l2-1c2 0 2 1 3 2l2 3v2l1 5c1 5-1 10-3 15l-2 4-1 5h-11Zm-48-20c-4 0-4-5-3-7 1-3 4-4 7-3 4 3 1 12-5 10Zm47-5v-4c1-1 2-2 3-1 5 2 1 8-3 5Zm-46 24v-3c0-2 2-2 2-1 6 1 1 8-2 4Z"/><path fill="#fff" d="m40 307-1-1-1-2-1-9v-17c-1-6-2-13-1-19l-1-4 2-4v-30c0-3-1-6 2-8 0-2 2-4 4-4h3l3 2c2-2 4-1 5 1l1 6-1 12v13c0 3 1 6-1 8v53c-1 3-5 4-7 3h-6Zm3-14v-1h-1l1 1Zm9-240v-3h-4l-6-1h-7v14l2 7v23c-1 5-1 11 1 15 1 3 3 4 5 4l1 1c5 0 7-6 7-10V87c2-2 1-5 2-7V70l-1-17ZM36 604c0-12 3-24 4-36-7-6-5-30 6-25 4 0 6 5 7 8 6 0 3 8 4 12v17h2l-1 7-1 18v3l-1 10v8l-3-1-10-1h-3l-1 1-1 1v1c-2-8-2-19-2-23Z"/><path fill="#04FD0D" d="m299 318-1-2c-2 0-3-2-3-4h-1c-1 2-3 2-4 1v-18h1c3 2 6 2 9 2l6 1h25l6-1v1c3 1 2 4 2 6v10c-1 1-3 2-5 1-4 3-10 4-15 3l-15-1-3 2-2-1Zm31-20ZM108 187l-12-2-1 1-2 1h-3l-1-1-1-5-3-10 3-4c0-2 0-3 2-4l2-1h5l3-1 13 2 9 1c3 0 6-1 8 2 2-5 8-2 7 2l1 1 1 6 1 6-2 6h-30Zm266-62-3-1-1-2c-4 5-12 1-11-5 1-4-1-9 1-12h6l2-1 2-1 3-2h1c7-3 11 3 10 10 2 5 0 15-6 13l-3 1h-1Zm-189-22-4-1-5-2-7-2c-4 1-9 0-13-2l-5 3c-2 1-5 2-7 0-7 4-10-2-9-8-2-1-1-3-1-5l1-3c1-3 3-7 6-6h36l2 1h1l4 1h3l4 1v12l1 8c0 2-3 3-5 3h-2Zm-42-11h2l-1-1-1-2v3Zm34-4v1l2-3h-2v2Zm164 426c-8-1-15 0-23-2-3 3-8 1-8-4-3-1-3-5-1-6 1-4 1-8 3-11h3l8 1h1l6-1 13-2h5c3-1 6-1 6 3h1l1-1c1-3 6-2 6 2l1 8-1 7c-2 5-12 6-18 6h-3Zm-209 56c-2 2-5 1-6-1-2-1-4-3-3-5h-2v-7l1-11v-2l3 1 2-2 1-1 5 1 4 1h4l2-1h2l2-1 8 1c4-2 9 2 12 2l6 1v19l1 3c-4 4-19 4-26 4h-3l-13-2Z"/><path fill="#1837F6" d="m48 471-1-6c-2 1-2-1-2-3l1-5 1-7v-6c-2-3-1-5-2-8v-10l3-32 1-4 1-3c2-1 5 0 5 2l-1 15-1 30-1 5c0 2 1 5-1 6l1 16v6l-1 2-1 3c-1 1-2 0-2-1Z"/><path fill="#04FD0D" d="M50 311c-1 0-2-1-2-3-4 4-9 2-8-3-3-3-1-8-1-11l-1-24a168 168 0 0 1 0-10l1-5v-6c-2-2-2-5-2-7v-11l1-13c-1-3 1-7 4-6 2-2 4-1 5 1 2-1 4-1 5 1v1l1 8v13c0 14 2 29 0 43l-1 9 2 6v10c0 3 0 7-4 7Z"/><path fill="#04FD0D" d="M46 250v-1l2-4h2v1c-1 1-2 6-4 4Zm2-137a4 4 0 0 1-2-1l-5 1c-2 0-4-3-4-5v-8l-1-6c0-7-2-33 3-37l-2-3-1-5h12l6 1v12l-2 9 1 9 1 23v3l-1 2c0 2-2 5-4 5h-1Zm-9 515-2-2-1-3 1-4v-23c-2-8-1-15-1-23l2-7-1-17c1-2 0-5 2-7s5-3 7-1h1l1 1c4-1 5 4 5 7l1 6-1 14v53c2 1 2 5-1 6l-3 1-10-1Zm7-49v3-3Z"/><path fill="#1837F6" d="M45 544c-3-1-5-5-2-7 0-3 5-3 5 0l2 3-2 3c0 1-2 2-3 1Z"/><path fill="#148018" d="M145 566c-9-3-7-18 4-15 9 2 6 16-4 15Zm187-58c-7-3-2-14 5-12 2 1 4 3 5 6 0 4-5 8-10 6Zm-21-196c-7 0-7-12 0-13h2c2-1 4 1 4 3 3 4-1 10-6 10ZM112 180l-4-1c-4-2-3-8 1-10 2-1 5 1 6 3l2 3c0 3-2 6-5 5Zm46-83c-3-1-4-4-4-7l3-6c2-1 4 0 6 1 2 0 3 3 2 4 1 2 0 4-1 6l-6 2Zm222 22-4-1-2-3c-1-4 2-8 6-8 3 0 4 2 5 5s-1 8-5 7Z"/><path fill="#04FD0D" d="M142 94c-3-2 0-9 3-6 2-2 5 0 3 2-2 1-4 5-6 4Z"/><path fill="#04FD0D" d="m145 90 1-1 1 1-1 1-1-1Zm113 135c-6 0-8-1-8-8l-1-6 1-5c0-2 3-3 5-2 0-3 3-3 6-2l5-1 9-1h9l10-1c2 0 5 0 5 2 5 0 6 4 6 8v7c0 3 0 5-3 6l-10 2-8-1h-4l-3 1h-11l-8 1Z"/><path fill="#148018" d="M276 220c-7 0-6-14 0-15 10 0 9 15 0 15Z"/><path fill="#04FD0D" d="M44 629c-2 0-7-1-5-4l2-4 1-1 1 1 3 1 1 2c2 1 2 2 1 4l-4 1Zm-7-323-1-5-1-5 2-1c2 1 2 2 2 3 1 2 2 5 0 6v1c1 2-2 3-2 1Z"/><path fill="#05FE0D" d="M41 106c-2 0-2-3-3-4a63 63 0 0 1 1-17c-1-1 0-3 1-3l1-6V61c-1-4-2-8-1-11-2-1-2-3-2-5-1-1-2-4 0-5l1-2h4l3 1h4c2 0 2 3 1 4l-1 1c2 2 3 5 0 6v5c-1 1-2 2-4 1v11l1 15 1 5c0 2-3 3-4 1v10c-1 2 1 8-3 8Zm137-13v-1l-1-1 1-3v-2l2-1 1 7c0 2-2 3-3 1Zm145 206-3-1h5l-2 1Zm8-1h-1 1-1l6-1-2 1h-3ZM93 188h-2l-1-1h-1l-1-2 1-1h23l10-1a126 126 0 0 0 15-3h2c1 3-14 5-16 5l-4 2h-12l-14 1Zm39-22h-8c-2 0-5 1-5-1H88l-2-1v-2l4-1h45c1 0 2 2 1 3 0 2-2 2-4 2Zm177 152h-19v-3h1v1l2-1h28l1 1h2l2-1h7l3 1c0 1-1 2-2 1l-21 2-4-1Z"/><path fill="#05FE0D" d="M305 298h-11l-3-1-1-1v-3l1-1h42l3 1c2 1 1 4-1 4l-1 1h-6a197 197 0 0 1-23 0ZM169 547l-4-1-1-1h-6l-3 1h-13a308 308 0 0 1-11 0h-3l-5-1-1-2 2-1h45l3 1 1 1v1c-1 1-1 2-2 1l-1 1h-1Zm165-54-18-1c-2 0-5 1-5-1l-1-2 3-1 7 1 19-1h17c2 0 5 0 5 2s-2 2-3 2l-6-1-16 1-2 1Zm-7 23-10-1-4-1-1-1 1-1h10c0-3 5-2 7-2h25c1 0 3 1 2 2l5 1v3h-35Zm36-392v-1h-1c0-2 2-1 3-2l8 1 2-1 1 1v2h-13Zm-3-3-1-3v-9l-1-4h3l1 2v13l-1 1h-1Zm11-18 2-3h10c1 1 0 2-1 2h-6l-1 1h-4Z"/><path fill="#05FE0D" d="m367 107-5-1h-2c-1 0-2 0-2-2v-3h25l1 1-3 1-5 1-1 1h-2l-4 1-2 1Z"/>',
      '<path fill="#148118" d="m87 186-1-3c-2 0-1-13-1-15l1-4v-1h1v1l1 16c-1 1 0 5-1 4v2Zm51-2v-1l-1-2v-18h2v21h-1Zm165 39v-21l1-1 1 1v15l-1 4v2h-1Zm-53 1-1-13v-4l1-3 1 2v3-1 3l1 5v8h-2Zm88 92-1-1v-1l-1-15v-4h1l1-1 1 1v19l-1 2Zm22-193v-1h-1l-1-3-1-12v-6l1 1 1-1 1 2 1 1 1 13v6h-2ZM135 98h-1v-1l-1-2V85c0-1-1-4 1-4v-1h1l1 11a1396 1396 0 0 0-1 7Zm56 3v-1l-1-1v-4l-1-14v-3h2v2l1 2v6l1 12s-1 2-2 1Z"/><path fill="#148118" d="M191 96v-4l-1-2-1-10-2-1 1-1v-1l2 1-1-1 2-1v1l1 2v16h-1Zm-19 475h-1v-6l-1-15v-5l1-2 1 1v-1l1 6 1 11v6l-1 1c0 1 1 4-1 4Zm-51-3-1-1v-20l1-1v-2l2-1v20c0 1 1 3-1 4 1 0 0 2-1 1Zm188-56-1-6v-11l1-3h2l1 8-1 9c0 1 0 3-2 3Zm52 0-1-4v-18h1l2-1v18c0 1 1 5-1 5h-1Z"/><path fill="#19B6F6" d="M265 177c-4-2-1-6-1-9-5 2-9 7-15 8-3 1-4-2-2-4l2-4-1 3v3c3 2 15-11 18-9 2 2-1 6 0 8h3l11-5c1-1 4-2 4 0l-1 5c4 1 13-5 18-6 1-1 4-3 4 0l-1 5c-1 2 4 0 4-1l11-6 3-1c3 0-1 6 0 8 1 1 3 0 4-1l15-6h6l-2 1-10 4-10 4c-2 1-5 2-6-1l2-6-10 6-7 3c-4-1-2-5-1-7-6 1-27 16-21 1-5 2-12 7-17 7Zm12 427v-6l-1-15 1-13v-2l2 1 1-1c1-1 2-2 2 0v32h-2v3h-1s-1 2-2 1Z"/><path fill="#19B6F6" d="M280 603v-4 3c2-1 1 1 0 1Zm1-1 1-1-1 1Zm0 1 1-2-1 2Z"/><path fill="#19B6F6" d="M281 603c0-2 1-2 1 0h-1Zm20 2v-3l-1-4v-9c0-2-1-24 3-22h3v18l-1 10v4l-1 1c0 1 0 6-3 5Z"/><path fill="#19B6F6" d="M281 608c-2-1-2-2-2-4l-1-2c-1 0-1-3 1-3 1-2 3-4 5-1l1 2c0 3-1 8-4 8Zm21-3v-5c1-1 1-4 3-4l1-3 2-1 1 1-1 6c0 2 0 5-2 6h-4Zm-107 2v-37l2-4v-1l1 4h1c1-1 2 2 2 3a118 118 0 0 1 0 20l-1 8-1 3-1 2-1 2c0 1-2 1-2-1Zm-52-3h-1l-1-2-1-7v-25c1-2 2-4 4-2 1-2 3 1 3 3l1 4v6c1 3 2 21-2 21 0 1-2 4-3 2Z"/><path fill="#F6C019" d="M204 517c-13-2-24-9-12-21 9-8 23-16 35-19-9-4-18-6-28-6 11-1 23 0 33 5l11-1v2l-7 1c5 3 12 7 14 14s-4 14-10 17c-11 6-24 8-36 8Zm6-3c25-1 58-17 21-35-10 2-19 6-27 11-5 3-14 10-15 16 3 7 15 8 21 8Z"/></g><path fill="#000" d="M35 39v3a84541 84541 0 0 1 0 586c1 2 2 2 9 2h9a58228 58228 0 0 0 335 0l1-297-1-295H227a12746 12746 0 0 0 158 3v59l-3 1c-3-1-3 1 0 2 3 0 4 2 3 13l-1 8-3 1c-3 0-1 1 2 1 2 0 3 1 3 2l-1 499a9848 9848 0 0 1-320 1l-5 1-1-296-1-295c-9 0-9 0-10 3s-1 4 1 4 3 1 2 2c-2 1-2 3-1 3l2 2c1 1 0 2-1 3-2 1-2 2-1 2 2 0 3 2 2 3l-1 6c0 9-1 10-2 11-3 1-2 2 0 3 3 0 3 0 1 2v3c2 2 3 4 1 5-2 2-2 3 0 5 2 1 1 4-1 5-1 1-1 4 1 5 1 1 2 1 1 3-1 4-1 4-5 5-7 0-8 0-8-10l1-9V83c-1-2-1-2 1-3 3-1 3-2 1-3s-2-2-3-7c0-6 1-10 2-9l1 4c0 2 2 2 2 0l3-3 2-2-1-1-2-1c-5 0-7-2-7-5 1-4 3-5 3-1 0 2 0 2 2 2 3 0 3 0 3-3s-1-3-4-3c-2 0-3 0-3-2-1-3 0-5 1-5l1 2 1 2c2 0 2-1 1-3 0-4-7-6-9-3Zm14 80c0 1 0 2 1 1 1-2 1 0 1 5 1 49 1 48-1 49l-1 3c0 2 0 2 1 1l1-1a125 125 0 0 1 0 27c1 2 0 4-2 4l-1 1c-1 1-3 0-3-2s0-2-1 0l-1 2-2-15 1-21a1456 1456 0 0 1 0-55l4-2c2 0 3 1 3 3Zm3 96c1 1 0 2-2 2-4 0-4 3-1 3 2-1 3 0 3 3v5l-2 9v2c2 1 2 3 0 3-1 1-1 2 1 3 2 0 2 3 1 5l-1 2 1 10v9l-2 1c-3 0-3 2 0 2 2 0 2 2 1 3v3c2 3 2 4 0 6l-2 2 2 1c2 1 2 5 0 6-2 0-2 2 0 4s2 6 0 7c-1 2-9 2-11 0v-7l1-2-1-2v-6c2-1 2-1 0-3v-7c1-1 2-1 1-2-2-1-1-3 1-3s2-2 0-2-2-1-2-7v-9c0-2 2-1 2 2l1 4 1-3c0-3 2-3 3 0 0 4 2 3 2-2 0-4-1-5-4-5-3 1-3 0-5-1-1-3-1-6 1-7l2 3c0 2 0 2 2 2 4-1 4-1 3-4l-3-2c-4 0-8-7-5-8 2-1 2-2 0-4v-9l2-2c3 0 2-3 0-3-3 0-4-2-2-3h7l5 1Zm-3 96 1 3c0 3 0 3 1 1l2-2 1 8a273 273 0 0 0-1 21c-1 0-2-1-2-3-1-2-1-1-1 2-1 5 0 6 1 4l2-1 1 16v23h-2l-1-4-1-2v2l-3 7c-4-1-5-5-4-9v-3l-1-6-1-7v-39c0-7 0-9 3-10l5-1Zm3 79v2l-2 2c-3 0-4 2-1 2 3 1 4 2 2 3v2c2 0 1 9-1 11-1 2-1 3 1 4s2 10 0 11v2l1 14c0 4 0 4-3 5s-3 3 0 3c4 1 4 1 2 2-1 2-1 2 1 4 1 2 1 2-1 4v4c2 2 2 5 0 6v4c2 2 2 6 1 8l-6 1-6-1v-7l2-3-2-2-1-2 1-3 2-2-2-3-1-2 1-2c2-1 2-3 1-3-2 0-1-3 1-3s3-2 1-3l-2-2c-1-4-2-13-1-14 1-2 3 0 2 3l1 3 1-2 1-2c1 0 2 0 2 2 0 3 1 3 2-1 0-5 0-5-3-5-2 0-3-1-5-3s-2-4-1-6l2-3-2-2-1-2 1-2 2-2-2-3-1-3 1-2c2-1 2-3 1-3-2 0-1-3 1-3s3-2 1-2-4-2-2-4h11Zm-3 98 1 3c-1 3 0 4 2 2v-2c-2-2-1-3 1-2l1 9v8l-2 2c-3 2-3 3-3 6 1 4 3 6 3 2 0-1 0-2 1-1l1 12v12h-3l-4 2h-3c-3-1-3-2-3-8v-7l3-1c2 0 2 0 2-3 0-4-1-4-3-4h-2c-1-2 0-5 1-7l1-3-1-7 1-13h6Zm3 59-2 1c-3 1-3 2 0 3 2 0 2 2 0 3-1 0-1 1 1 2 1 1 2 2 1 5v4l-2 3v2c2 2 2 3 0 4-1 0-1 2 1 2 2 1 2 3 0 5v2l1 8v9c0 3-1 3-3 3-3 0-3 2 0 3 3 0 3 1 1 3-1 0-1 1 1 2s2 3 0 5c-2 3-2 5-1 5l2 1c1 2 0 4-2 4l-1 1c-1 3-7 2-7 0l-2-2c-1 0-1-3 1-4v-4c-2-3-2-5-1-6l1-2c-2-2-1-3 1-3 2-1 3-3 0-3-2 0-2-1-2-11 0-6 1-8 2-3 0 4 2 5 2 1 0-2 3-3 3 0 0 4 2 3 2-2v-4h-4c-2 0-3 0-4-2-2-2-2-5 0-7v-2c-2-2-2-6-1-7 2-1 2-2 0-4v-8c0-2 0-3 2-3 2-1 2-2 0-2-2-1-3-2-2-3l6-1c5 0 6 1 6 2Z"/><path fill="#000" d="M50 130c0 2 0 2 1 1v-3l-1 2Zm0 7c0 2 0 3 1 2l1-2-1-2-1 2Zm-1 21v2c1 2 3 1 3-1s-2-3-3-1Zm-7 70 1 1 1-1-1-2-1 2Zm5 0v2l2-1v-1h-2Zm-5 9c-1 1 1 3 3 2 1-1 1-1-1-2h-2Zm2 32c0 2 2 2 3 0l-1-1-2 1Zm-2 13c-1 1 1 2 3 2 4 0 5-1 3-2h-6Zm0 9c-1 2 0 3 4 3 2 0 2 0 2-2s-5-3-6-1Zm0 9c-1 2 0 4 1 4l1-2c0-2-1-3-2-2Zm5 1v2h2v-2h-2Zm3 21c0 2 0 2 1 0v-2c-1-1-1 0-1 2Zm0 6c0 1 0 2 1 1l1-1-1-1-1 1Zm-5 71v2h2c0-2-2-2-2-2Zm-3 5 1 1h1c0-1-1-2-2-1Zm5 0c-1 2 0 5 2 3v-3h-2Zm-4 8c-1 2 0 4 2 4 1 0 2-2 1-4h-3Zm1 9c-1 2 0 4 2 4s2 0 2-2l-2-4-2 2Zm0 24c0 1 1 2 3 1 2 0 2-2-1-2l-2 1Zm-1 13c-1 2 0 3 3 3s3-1 3-3h-6Zm1 9c-2 0-2 3 0 4s4 0 5-2v-2h-5Zm-2 10c0 1 0 2 1 1l1-1-1-1-1 1Zm5 0v2l2-1c0-1-1-2-2-1Zm-4 78 2 1 1-1c1-1 0-1-1-1l-2 1Zm-1 4 1 2 1-2-1-2-1 2Zm5 0c-1 1 0 2 1 2l1-1c0-1-1-2-2-1Zm-5 9c-1 2 1 3 3 2 2 0 2 0 0-1-1-2-2-2-3-1Zm2 6c-1 1-2 2-1 4 0 2 0 2 2 2 4 0 3 0 3-3-1-3-2-4-4-3Zm-1 25v1l1 1 2 1 1-1c-1-2-3-3-4-2Zm-1 14c-1 2 1 3 3 3 4 0 5-1 3-3h-6Zm0 9c-1 3 0 4 3 4s5-1 3-4c-1-2-5-2-6 0Zm1-548c0 1 2 2 3 1s1-3-1-3-2 1-2 2Zm92 5v4c0 3 1 4 1 2 1-2 5-5 8-5l3-1h-12Zm21 0 2 1 1-1-2-1-1 1Zm6 0 1 1 2-1-1-1-2 1Zm14 0h2c1-1 1-1-1-1-3 0-3 0-1 1Zm6 0 7 2 2-2-5-1-4 1ZM42 87c-1 2 0 3 3 3 2 0 3-2 2-3s-4-2-5 0Zm93 5 1 2 1-2-1-2-1 2Zm66 3-5 3-1 2-1 2-2 4-1 4-1 4c1 1 0 3-1 5-2 3-2 6 2 13 2 4 3 5 6 6l5 2 4 1c1 1 4 2 4 0l3-1 5-3c3-2 4-4 6-14l2-6c1-2 0-11-1-13-4-6-8-9-10-7h-1l-2-1-4-2c-3-1-3-1-7 1Zm14 9 2 1 2 2c2 2 2 3 2 7l-2 11c-2 6-5 9-9 10h-2l1-1 3-4 2-5 1-5 2-4 1-3c2-2 1-3-1-3l-3 1-1 4-2 6-1 5-1 3-3 1-4-2-4-1c-5 1-5 0-1-12 2-8 3-10 4-10l3-2c0-1 7-1 11 1Zm-11 30-2 1-2-1 2-1 2 1Z"/>',

      string.concat('<text x="110" y="260" class="r2">Event: ', game.name),
      formatBetType(game),
      string.concat(betString, boolString(isHomeOrUnder)),
      string.concat('</text><text x="120" y="350" class="r">Wager: $', numberToString(data.homeOrUnderWager + data.awayOrOverWager, DECIMALS)),
      string.concat(' USDC</text><text x="120" y="380" class="r">Payout: $', numberToString(data.homeOrUnderPayout + data.awayOrOverPayout, DECIMALS)),
      ' USDC</text></svg>'
    );

    return string(
        abi.encodePacked(
            "data:image/svg+xml;base64,",
            Base64.encode(svg)
        )
    );
  }

  function formatBetType(IBookie.Game memory game) private pure returns (string memory) {
    string memory spread = string.concat(string.concat(symbol(game.spreadOrOverUnder), Strings.toString(abs(int(game.spreadOrOverUnder)) / 10)), string.concat('.', Strings.toString(decimal(game.spreadOrOverUnder))));

    if (game.wagerType == IBetNFT.WagerType.spreadBet) {
      return string.concat('</text><text x="120" y="290" class="r">Spread: ', spread);
    } else {
      return string.concat('</text><text x="120" y="290" class="r">O/U: ', spread);
    }
  }

  function numberToString(uint x, uint n) private pure returns (string memory) {
    uint number = x / (10 ** n);
    uint decimals = (x - ((x / 10 ** n) * 10 ** n)) / 10 ** (n - 2);
    return string.concat(
      string.concat(Strings.toString(number), '.'),
      Strings.toString(decimals)
    );
  }

  function abs(int x) private pure returns (uint) {
    return x >= 0 ? uint(x) : uint(-x);
  }

  function boolString(bool x) private pure returns (string memory) {
    return x ? "True" : "False";
  }

  function decimal(int y) private pure returns(uint) {
    uint x = abs(y);
    return (x - (x / 10) * 10);
  }

  function symbol(int x) private pure returns (string memory) {
    return x >= 0 ? '+' : '-';
  }
}
